# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import service_pb2 as service__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUsers = channel.unary_unary(
                '/protos.UserService/GetUsers',
                request_serializer=service__pb2.GetUsersRequest.SerializeToString,
                response_deserializer=service__pb2.GetUsersResponse.FromString,
                _registered_method=True)
        self.GetUser = channel.unary_unary(
                '/protos.UserService/GetUser',
                request_serializer=service__pb2.GetUserRequest.SerializeToString,
                response_deserializer=service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.GetUserByUsername = channel.unary_unary(
                '/protos.UserService/GetUserByUsername',
                request_serializer=service__pb2.GetUserByUsernameRequest.SerializeToString,
                response_deserializer=service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/protos.UserService/CreateUser',
                request_serializer=service__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.UpdateUser = channel.unary_unary(
                '/protos.UserService/UpdateUser',
                request_serializer=service__pb2.UpdateUserRequest.SerializeToString,
                response_deserializer=service__pb2.UserResponse.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/protos.UserService/DeleteUser',
                request_serializer=service__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteUserResponse.FromString,
                _registered_method=True)
        self.AuthenticateUser = channel.unary_unary(
                '/protos.UserService/AuthenticateUser',
                request_serializer=service__pb2.AuthenticateUserRequest.SerializeToString,
                response_deserializer=service__pb2.AuthenticateUserResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserByUsername(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AuthenticateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUsers,
                    request_deserializer=service__pb2.GetUsersRequest.FromString,
                    response_serializer=service__pb2.GetUsersResponse.SerializeToString,
            ),
            'GetUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUser,
                    request_deserializer=service__pb2.GetUserRequest.FromString,
                    response_serializer=service__pb2.UserResponse.SerializeToString,
            ),
            'GetUserByUsername': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserByUsername,
                    request_deserializer=service__pb2.GetUserByUsernameRequest.FromString,
                    response_serializer=service__pb2.UserResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=service__pb2.CreateUserRequest.FromString,
                    response_serializer=service__pb2.UserResponse.SerializeToString,
            ),
            'UpdateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateUser,
                    request_deserializer=service__pb2.UpdateUserRequest.FromString,
                    response_serializer=service__pb2.UserResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=service__pb2.DeleteUserRequest.FromString,
                    response_serializer=service__pb2.DeleteUserResponse.SerializeToString,
            ),
            'AuthenticateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AuthenticateUser,
                    request_deserializer=service__pb2.AuthenticateUserRequest.FromString,
                    response_serializer=service__pb2.AuthenticateUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protos.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('protos.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/GetUsers',
            service__pb2.GetUsersRequest.SerializeToString,
            service__pb2.GetUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/GetUser',
            service__pb2.GetUserRequest.SerializeToString,
            service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserByUsername(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/GetUserByUsername',
            service__pb2.GetUserByUsernameRequest.SerializeToString,
            service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/CreateUser',
            service__pb2.CreateUserRequest.SerializeToString,
            service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/UpdateUser',
            service__pb2.UpdateUserRequest.SerializeToString,
            service__pb2.UserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/DeleteUser',
            service__pb2.DeleteUserRequest.SerializeToString,
            service__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AuthenticateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.UserService/AuthenticateUser',
            service__pb2.AuthenticateUserRequest.SerializeToString,
            service__pb2.AuthenticateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProjectServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProjects = channel.unary_unary(
                '/protos.ProjectService/GetProjects',
                request_serializer=service__pb2.GetProjectsRequest.SerializeToString,
                response_deserializer=service__pb2.GetProjectsResponse.FromString,
                _registered_method=True)
        self.GetProject = channel.unary_unary(
                '/protos.ProjectService/GetProject',
                request_serializer=service__pb2.GetProjectRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectResponse.FromString,
                _registered_method=True)
        self.GetProjectBySlug = channel.unary_unary(
                '/protos.ProjectService/GetProjectBySlug',
                request_serializer=service__pb2.GetProjectBySlugRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectResponse.FromString,
                _registered_method=True)
        self.GetProjectsByUser = channel.unary_unary(
                '/protos.ProjectService/GetProjectsByUser',
                request_serializer=service__pb2.GetProjectsByUserRequest.SerializeToString,
                response_deserializer=service__pb2.GetProjectsResponse.FromString,
                _registered_method=True)
        self.CreateProject = channel.unary_unary(
                '/protos.ProjectService/CreateProject',
                request_serializer=service__pb2.CreateProjectRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectResponse.FromString,
                _registered_method=True)
        self.UpdateProject = channel.unary_unary(
                '/protos.ProjectService/UpdateProject',
                request_serializer=service__pb2.UpdateProjectRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectResponse.FromString,
                _registered_method=True)
        self.DeleteProject = channel.unary_unary(
                '/protos.ProjectService/DeleteProject',
                request_serializer=service__pb2.DeleteProjectRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteProjectResponse.FromString,
                _registered_method=True)


class ProjectServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectBySlug(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectsByUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjects,
                    request_deserializer=service__pb2.GetProjectsRequest.FromString,
                    response_serializer=service__pb2.GetProjectsResponse.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=service__pb2.GetProjectRequest.FromString,
                    response_serializer=service__pb2.ProjectResponse.SerializeToString,
            ),
            'GetProjectBySlug': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectBySlug,
                    request_deserializer=service__pb2.GetProjectBySlugRequest.FromString,
                    response_serializer=service__pb2.ProjectResponse.SerializeToString,
            ),
            'GetProjectsByUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectsByUser,
                    request_deserializer=service__pb2.GetProjectsByUserRequest.FromString,
                    response_serializer=service__pb2.GetProjectsResponse.SerializeToString,
            ),
            'CreateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProject,
                    request_deserializer=service__pb2.CreateProjectRequest.FromString,
                    response_serializer=service__pb2.ProjectResponse.SerializeToString,
            ),
            'UpdateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProject,
                    request_deserializer=service__pb2.UpdateProjectRequest.FromString,
                    response_serializer=service__pb2.ProjectResponse.SerializeToString,
            ),
            'DeleteProject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProject,
                    request_deserializer=service__pb2.DeleteProjectRequest.FromString,
                    response_serializer=service__pb2.DeleteProjectResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protos.ProjectService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('protos.ProjectService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProjectService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/GetProjects',
            service__pb2.GetProjectsRequest.SerializeToString,
            service__pb2.GetProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/GetProject',
            service__pb2.GetProjectRequest.SerializeToString,
            service__pb2.ProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectBySlug(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/GetProjectBySlug',
            service__pb2.GetProjectBySlugRequest.SerializeToString,
            service__pb2.ProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectsByUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/GetProjectsByUser',
            service__pb2.GetProjectsByUserRequest.SerializeToString,
            service__pb2.GetProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/CreateProject',
            service__pb2.CreateProjectRequest.SerializeToString,
            service__pb2.ProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/UpdateProject',
            service__pb2.UpdateProjectRequest.SerializeToString,
            service__pb2.ProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectService/DeleteProject',
            service__pb2.DeleteProjectRequest.SerializeToString,
            service__pb2.DeleteProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProjectImageServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetImagesByProject = channel.unary_unary(
                '/protos.ProjectImageService/GetImagesByProject',
                request_serializer=service__pb2.GetImagesByProjectRequest.SerializeToString,
                response_deserializer=service__pb2.GetProjectImagesResponse.FromString,
                _registered_method=True)
        self.GetImage = channel.unary_unary(
                '/protos.ProjectImageService/GetImage',
                request_serializer=service__pb2.GetImageRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectImageResponse.FromString,
                _registered_method=True)
        self.CreateImage = channel.unary_unary(
                '/protos.ProjectImageService/CreateImage',
                request_serializer=service__pb2.CreateImageRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectImageResponse.FromString,
                _registered_method=True)
        self.UpdateImage = channel.unary_unary(
                '/protos.ProjectImageService/UpdateImage',
                request_serializer=service__pb2.UpdateImageRequest.SerializeToString,
                response_deserializer=service__pb2.ProjectImageResponse.FromString,
                _registered_method=True)
        self.DeleteImage = channel.unary_unary(
                '/protos.ProjectImageService/DeleteImage',
                request_serializer=service__pb2.DeleteImageRequest.SerializeToString,
                response_deserializer=service__pb2.DeleteImageResponse.FromString,
                _registered_method=True)


class ProjectImageServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetImagesByProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectImageServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetImagesByProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImagesByProject,
                    request_deserializer=service__pb2.GetImagesByProjectRequest.FromString,
                    response_serializer=service__pb2.GetProjectImagesResponse.SerializeToString,
            ),
            'GetImage': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImage,
                    request_deserializer=service__pb2.GetImageRequest.FromString,
                    response_serializer=service__pb2.ProjectImageResponse.SerializeToString,
            ),
            'CreateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateImage,
                    request_deserializer=service__pb2.CreateImageRequest.FromString,
                    response_serializer=service__pb2.ProjectImageResponse.SerializeToString,
            ),
            'UpdateImage': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateImage,
                    request_deserializer=service__pb2.UpdateImageRequest.FromString,
                    response_serializer=service__pb2.ProjectImageResponse.SerializeToString,
            ),
            'DeleteImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteImage,
                    request_deserializer=service__pb2.DeleteImageRequest.FromString,
                    response_serializer=service__pb2.DeleteImageResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'protos.ProjectImageService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('protos.ProjectImageService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProjectImageService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetImagesByProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectImageService/GetImagesByProject',
            service__pb2.GetImagesByProjectRequest.SerializeToString,
            service__pb2.GetProjectImagesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectImageService/GetImage',
            service__pb2.GetImageRequest.SerializeToString,
            service__pb2.ProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectImageService/CreateImage',
            service__pb2.CreateImageRequest.SerializeToString,
            service__pb2.ProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectImageService/UpdateImage',
            service__pb2.UpdateImageRequest.SerializeToString,
            service__pb2.ProjectImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/protos.ProjectImageService/DeleteImage',
            service__pb2.DeleteImageRequest.SerializeToString,
            service__pb2.DeleteImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
